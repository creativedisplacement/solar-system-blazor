@page "/Planet/{planetName}/{planetId:guid}"
@using SolarSystem.Common.Models.Planet
@inject HttpClient Http
@inject NavigationManager UriHelper
<h1>@_planet.Name</h1>
<div class="row">
    <div class="col-sm-12 col-md-3">
        <img class="img-fluid" src="@_planet.ImageUrl" alt="@_planet.Name" />
        <div class="col-md-12 alert-secondary">
            <h2>Quick facts</h2>
            <p><span class="badge badge-secondary">Day</span>@FormatQuickFacts(_planet.RotationPeriod, "hours")
            </p>
            <p><span class="badge badge-secondary">Year</span>@FormatQuickFacts(_planet.Period, "Earth years")
            </p>
            <p><span class="badge badge-secondary">Planet type</span>@FormatQuickFacts(_planet.Type,"")
            </p>
            <p><span class="badge badge-secondary">Radius</span>@FormatQuickFacts(FormatNumbersWithCommas(_planet.Radius), "kilometres")
            </p>
            <p><span class="badge badge-secondary">Number of moons</span>@FormatQuickFacts(_planet.Moons, "")
            </p>
        </div>
    </div>
    <div class="col-sm-12 col-md-9">
        <p>@_planet.Introduction</p>
        <p>@((MarkupString)FormatDescription(_planet.Description))</p>
        <p><a class="btn btn-primary" href="/">Back to planets</a></p>
    </div>
</div>

@code {

    [Parameter]
    public string PlanetName { get; set; }
    
    [Parameter]
    public Guid PlanetId { get; set; }

    GetPlanetModel _planet = new GetPlanetModel();

    protected override async Task OnParametersSetAsync()
    {
        _planet = await Http.GetFromJsonAsync<GetPlanetModel>($"api/v1/planet/{PlanetName}/{PlanetId}");
    }

    private static string FormatNumbersWithCommas(double value)
    {
        return $"{value:0,0.0}";
    }

    private static string FormatQuickFacts(object value, string units)
    {
        return  $" {value} {units}";
    }

    private static string FormatDescription(string value)
    {
        return !string.IsNullOrEmpty(value) ? value.Replace(Environment.NewLine, "<br /><br />") : value;
    }
}